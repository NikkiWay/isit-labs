from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
    ConversationHandler,
)
import wikipedia
import logging
import os
from dotenv import load_dotenv

load_dotenv()
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
ADMINS_IDS = list(map(int, os.getenv("ADMINS_IDS", "").split(",")))

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

WAITING_FOR_QUERY = 1
wikipedia.set_lang("ru")


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üß† –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /wiki —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å—Ç–∞—Ç—å—é –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏")


async def start_wiki_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id

    if user_id not in ADMINS_IDS:
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∫–æ–º–∞–Ω–¥—ã")
        return ConversationHandler.END

    await update.message.reply_text(
        "üîç –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å—Ç–∞—Ç—å–∏ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏\n–û—Ç–º–µ–Ω–∞: /cancel"
    )
    return WAITING_FOR_QUERY


async def handle_query(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        query = update.message.text
        summary = wikipedia.summary(query, sentences=3)
        await update.message.reply_text(f"üìò –†–µ–∑—É–ª—å—Ç–∞—Ç:\n{summary}")
    except wikipedia.exceptions.DisambiguationError as e:
        await update.message.reply_text(
            f"‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: {', '.join(e.options[:5])}...\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å."
        )
    except wikipedia.exceptions.PageError:
        await update.message.reply_text("‚ùå –°—Ç–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å.")
    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤ Wikipedia")
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

    return ConversationHandler.END


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üö´ –ü–æ–∏—Å–∫ –æ—Ç–º–µ–Ω—ë–Ω. –î–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–Ω–æ–≤–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /wiki")
    return ConversationHandler.END


def main():
    application = Application.builder().token(TELEGRAM_TOKEN).build()

    application.add_handler(CommandHandler("start", start_command))

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("wiki", start_wiki_command)],
        states={
            WAITING_FOR_QUERY: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_query)]
        },
        fallbacks=[CommandHandler("cancel", cancel)]
    )
    application.add_handler(conv_handler)

    application.run_polling()


if __name__ == "__main__":
    main()
